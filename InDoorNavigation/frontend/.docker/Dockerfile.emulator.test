# # Copyright 2019 - The Android Open Source Project
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #     http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.
# {{from_base_img}}

# # Install all the required emulator dependencies.
# # You can get these by running ./android/scripts/unix/run_tests.sh --verbose --verbose --debs | grep apt | sort -u
# # pulse audio is needed due to some webrtc dependencies.
# RUN apt-get update && apt-get install -y --no-install-recommends \
# # Emulator & video bridge dependencies
#     libc6 libdbus-1-3 libfontconfig1 libgcc1 \
#     libpulse0 libtinfo5 libx11-6 libxcb1 libxdamage1 \
#     libnss3 libxcomposite1 libxcursor1 libxi6 \
#     libxext6 libxfixes3 zlib1g libgl1 pulseaudio socat \
# # Enable turncfg through usage of curl
#     curl ca-certificates && \
#     apt-get clean && \
#     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# # Now we configure the user account under which we will be running the emulator
# RUN  mkdir -p /android-home

# # Make sure to place files that do not change often in the higher layers
# # as this will improve caching.
# COPY launch-emulator.sh /android/sdk/
# COPY default.pa /etc/pulse/default.pa

# RUN gpasswd -a root audio && \
#     chmod +x /android/sdk/launch-emulator.sh

# COPY emu/ /android/sdk/
# COPY avd/ /android-home
# # Create an initial snapshot so we will boot fast next time around,
# # This is currently an experimental feature, and is not easily configurable//
# # RUN --security=insecure cd /android/sdk && ./launch-emulator.sh -quit-after-boot 120

# # This is the console port, you usually want to keep this closed.
# EXPOSE 5554

# # This is the ADB port, useful.
# EXPOSE 5555

# # This is the gRPC port, also useful, we don't want ADB to incorrectly identify this.
# EXPOSE 8554

# WORKDIR /android/sdk

# # You will need to make use of the grpc snapshot/webrtc functionality to actually interact with
# # the emulator.
# CMD ["/android/sdk/launch-emulator.sh"]

# # Note we should use gRPC status endpoint to check for health once the canary release is out.
# HEALTHCHECK --interval=30s \
#             --timeout=30s \
#             --start-period=30s \
#             --retries=3 \
#             CMD /android/sdk/platform-tools/adb shell getprop dev.bootcomplete | grep "1"

# LABEL maintainer="{{user}}" \
#       com.google.android.emulator.description="Pixel 2 Emulator, running API {{api}}" \
#       com.google.android.emulator.version="{{tag}}-{{api}}-{{abi}}/{{emu_build_id}}"



# Use Ubuntu as the base image
FROM ubuntu:20.04

# Install necessary dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libc6 libdbus-1-3 libfontconfig1 libgcc1 \
    libpulse0 libtinfo5 libx11-6 libxcb1 libxdamage1 \
    libnss3 libxcomposite1 libxcursor1 libxi6 \
    libxext6 libxfixes3 zlib1g libgl1 pulseaudio socat \
    curl ca-certificates \
    openjdk-11-jdk \
    unzip \
    wget \
    x11vnc \
    xvfb \
    fluxbox \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set environment variables for Android SDK
ENV ANDROID_SDK_ROOT=/android/sdk
ENV PATH=$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

# Create necessary directories
RUN mkdir -p $ANDROID_SDK_ROOT
RUN mkdir -p /android-home

# Download and install Android SDK and Emulator
RUN wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O /tmp/tools.zip && \
    unzip -q /tmp/tools.zip -d $ANDROID_SDK_ROOT && \
    rm /tmp/tools.zip

# Accept licenses
RUN yes | sdkmanager --licenses

# Install emulator and system image
RUN sdkmanager "platform-tools" "emulator" "platforms;android-30" "system-images;android-30;google_apis;x86_64" && \
    avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --device "pixel"

# Copy necessary files
COPY ../scripts/launch-emulator.sh $ANDROID_SDK_ROOT/
COPY default.pa /etc/pulse/default.pa

RUN gpasswd -a root audio && \
    chmod +x $ANDROID_SDK_ROOT/launch-emulator.sh

# Set up VNC server
RUN mkdir ~/.vnc && \
    x11vnc -storepasswd 1234 ~/.vnc/passwd

# Expose ports
EXPOSE 5554 5555 5900

# Set working directory
WORKDIR $ANDROID_SDK_ROOT

# Start VNC server and emulator
CMD ["sh", "-c", "Xvfb :0 -screen 0 1280x800x16 & fluxbox & x11vnc -display :0 -forever -passwd 1234 & ./launch-emulator.sh"]
